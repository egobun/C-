///////////////////////////////////////////////////////////////////

// support : Boost.PropertyTree

///////////////////////////////////////////////////////////////////

#include <cassert>
#include <filesystem>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <print>
#include <string>
#include <vector>

///////////////////////////////////////////////////////////////////

using namespace std::literals;

///////////////////////////////////////////////////////////////////

#include <nlohmann/json.hpp>

///////////////////////////////////////////////////////////////////

int main()
{
    nlohmann::json json;

//  ---------------------------------------------------------------

    auto string = "aaaaa"s;

//  ---------------------------------------------------------------

    std::vector < int > vector = { 1, 2, 3, 4, 5 };

//  ---------------------------------------------------------------

    json["string"] = string;

    json["vector"] = vector;

//  ---------------------------------------------------------------

    json["x"]["y"] = 1;

//  ---------------------------------------------------------------

    auto path = "output.json";

//  ---------------------------------------------------------------

    std::fstream(path, std::ios::out) << std::setw(4) << json;

//  ---------------------------------------------------------------

    std::print("main : enter char : "); std::cin.get();

//  ---------------------------------------------------------------

    json = nlohmann::json::parse(std::fstream(path, std::ios::in));

//  ---------------------------------------------------------------

    assert(json["string"].get < decltype(string) > () == string);

    assert(json["vector"].get < decltype(vector) > () == vector);

//  ---------------------------------------------------------------

    assert(json["x"]["y"].get < int > () == 1);

//  ---------------------------------------------------------------

    std::filesystem::remove(path);
}

///////////////////////////////////////////////////////////////////