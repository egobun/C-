////////////////////////////////////////////////////////////////////////////////////////

#include <cassert>
#include <iterator>
#include <string_view>

////////////////////////////////////////////////////////////////////////////////////////

using namespace std::literals;

////////////////////////////////////////////////////////////////////////////////////////

#include <boost/spirit/home/x3.hpp>

////////////////////////////////////////////////////////////////////////////////////////

int main()
{
    auto view = "1 2 3"sv;

//  ------------------------------------------------------------------------------------

    auto begin = std::begin(view), end = std::end(view);

//  ------------------------------------------------------------------------------------

    auto x = 0;

//  ------------------------------------------------------------------------------------

    auto lambda = [&x](auto const & context){ x += boost::spirit::x3::_attr(context); };

//  ------------------------------------------------------------------------------------

    auto rule = *boost::spirit::x3::int_[lambda];

//  ------------------------------------------------------------------------------------

    using boost::spirit::x3::ascii::space;

//  ------------------------------------------------------------------------------------

    boost::spirit::x3::phrase_parse(begin, end, rule, space);

//  ------------------------------------------------------------------------------------

    assert(x == 6);
}

////////////////////////////////////////////////////////////////////////////////////////